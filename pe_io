#ifndef PE_IO_
#define PE_IO_

#include "pe_base"
template <typename T>
SL T ReadInt() {
  struct X {
    int dig[256];
    X() {
      for (int i = '0'; i <= '9'; ++i) dig[i] = 1;
      dig['-'] = 1;
    }
  };
  static X f;
  T v = 0;
  int s = 1, c;
  for (; !f.dig[c = getchar()];) {
    ;
  }
  if (c == '-') {
    s = 0;
  } else if (f.dig[c]) {
    v = c ^ 48;
  }
  for (; f.dig[c = getchar()]; v = v * 10 + (c ^ 48)) {
    ;
  }
  return s ? v : -v;
}

#define Rint read_int<int>

template <typename T>
SL T ReadValue() {
  T v;
  cin >> v;
  return v;
}

template <>
inline int ReadValue<int>() {
  return ReadInt<int>();
}

template <>
inline int64 ReadValue<int64>() {
  return ReadInt<int64>();
}

#if PE_HAS_INT128
template <>
inline int128 ReadValue<int128>() {
  return ReadInt<int128>();
}
#endif

#define DV_IMPL_1(I, V1) V1 = I
#define DV_IMPL_2(I, V1, ...) V1 = I, DV_IMPL_1(I, __VA_ARGS__)
#define DV_IMPL_3(I, V1, ...) V1 = I, DV_IMPL_2(I, __VA_ARGS__)
#define DV_IMPL_4(I, V1, ...) V1 = I, DV_IMPL_3(I, __VA_ARGS__)
#define DV_IMPL_5(I, V1, ...) V1 = I, DV_IMPL_4(I, __VA_ARGS__)
#define DV_IMPL_6(I, V1, ...) V1 = I, DV_IMPL_5(I, __VA_ARGS__)
#define DV_IMPL_7(I, V1, ...) V1 = I, DV_IMPL_6(I, __VA_ARGS__)
#define DV_IMPL_8(I, V1, ...) V1 = I, DV_IMPL_7(I, __VA_ARGS__)
#define DV_IMPL_9(I, V1, ...) V1 = I, DV_IMPL_8(I, __VA_ARGS__)
#define DV_IMPL_10(I, V1, ...) V1 = I, DV_IMPL_9(I, __VA_ARGS__)
#define DV_IMPL_11(I, V1, ...) V1 = I, DV_IMPL_10(I, __VA_ARGS__)
#define DV_IMPL_12(I, V1, ...) V1 = I, DV_IMPL_11(I, __VA_ARGS__)
#define DV_IMPL_13(I, V1, ...) V1 = I, DV_IMPL_12(I, __VA_ARGS__)
#define DV_IMPL_14(I, V1, ...) V1 = I, DV_IMPL_13(I, __VA_ARGS__)
#define DV_IMPL_15(I, V1, ...) V1 = I, DV_IMPL_14(I, __VA_ARGS__)
#define DV_IMPL_16(I, V1, ...) V1 = I, DV_IMPL_15(I, __VA_ARGS__)

#define DV_IMPL(n, input, ...) PE_CONCAT(DV_IMPL_, n)(input, __VA_ARGS__)

#define DV(T, ...) T DV_IMPL(PE_NARG(__VA_ARGS__), ReadValue<T>(), __VA_ARGS__)
#define DVC(T, ...) \
  const T DV_IMPL(PE_NARG(__VA_ARGS__), ReadValue<T>(), __VA_ARGS__)

#endif
